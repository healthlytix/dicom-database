user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    #gzip  on;

    server {
        listen                443 ssl;
        ssl_certificate       /usr/local/nginx/conf/site.pem;
        ssl_certificate_key   /usr/local/nginx/conf/site.pem;
        ssl_protocols         TLSv1.2 TLSv1.3;
        
        # To avoid 504 error
        proxy_read_timeout 120s;

        # To avoid "too big header... / 502 Bad Gateway" error (inspired from https://www.getpagespeed.com/server-setup/nginx/tuning-proxy_buffer_size-in-nginx)
        proxy_buffer_size   32k;
        proxy_buffers   64 8k;
        proxy_busy_buffers_size   48k;

        # To avoid "414 Request-URI Too Large" whant opening 15(!) studies in OHIF
        large_client_header_buffers 8 16k;

        location / {
            return 301 /orthanc/ui/app/;
        }
        
        location /orthanc/ {
            proxy_pass http://orthanc-service:8042;
            rewrite /orthanc(.*) $1 break;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
            client_max_body_size 0;
        }

        location /keycloak/ {
            proxy_pass http://keycloak-service:8080;
            rewrite /keycloak(.*) $1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr; # in an https configuration, there is a native nginx which will do this job, so the X-Real-IP header will be already set.
            proxy_set_header Forwarded "for=$proxy_add_x_forwarded_for;proto=$scheme";
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
            client_max_body_size 0;
        }
        location = /nginx_health {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"UP"}';
        }
    }
}

stream {
    server {
        listen                11112 ssl;
        proxy_pass            orthanc-service:4242;
        ssl_certificate       /usr/local/nginx/conf/site.pem;
        ssl_certificate_key   /usr/local/nginx/conf/site.pem;
        ssl_protocols         TLSv1.2 TLSv1.3;
        ssl_ciphers           HIGH:!aNULL:!MD5:ECDH+AESGCM;
        ssl_session_cache     shared:SSL:20m;
        ssl_session_timeout   4h;
        ssl_handshake_timeout 30s;
    }
}
